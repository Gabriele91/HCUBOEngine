/* 
    FROM CPP:
    for (unsigned int i = 0; i != 128; ++i)
	{
         glm::vec3 sample(((float)std::rand() / RAND_MAX) * 2.0 - 1.0,
         ((float)std::rand() / RAND_MAX) * 2.0 - 1.0,
         ((float)std::rand() / RAND_MAX)
         );
         sample = glm::normalize(sample);
         sample *= ((float)std::rand() / RAND_MAX);
         GLfloat scale = GLfloat(i) / m_kernel_size;
         
         // Scale samples s.t. they're more aligned to center of kernel
         scale = glm::mix(0.1f, 1.0f, scale * scale);
         sample *= scale;
         m_kernel.push_back(sample);
	}
 */
uniform vec3 kernel[128]= vec3[](
     vec3(-0.0315447,-0.0232464,0.0238357),
     vec3(0.00785198,-0.0673455,0.00563663),
     vec3(0.0185005,0.0448534,0.0197856),
     vec3(0.0312699,-0.043974,0.00252555),
     vec3(0.00213241,-0.00613377,0.00238856),
     vec3(-0.0226011,0.0511582,0.0806621),
     vec3(0.069743,0.0054254,0.00926419),
     vec3(-0.0140521,0.0336563,0.0761417),
     vec3(-0.0141209,-0.0269007,0.021878),
     vec3(0.00995372,0.0192421,0.0371857),
     vec3(-0.0355547,0.0678244,0.0507865),
     vec3(0.030711,-0.0866114,0.0640124),
     vec3(-0.031758,-0.00888489,0.0535491),
     vec3(-0.0153732,-0.0131963,0.0105311),
     vec3(-0.000193373,0.00570334,0.00652011),
     vec3(0.0401917,0.000449233,0.02564),
     vec3(0.013674,-0.000169247,0.00373915),
     vec3(0.0421648,-0.040139,0.0235752),
     vec3(-0.0328507,0.0609829,0.0390336),
     vec3(0.0827393,-0.0844159,0.0714399),
     vec3(0.0851713,-0.0973351,0.00206132),
     vec3(0.0980285,0.0344848,0.0979926),
     vec3(0.049063,0.0381704,0.0114537),
     vec3(-0.0822761,0.00733034,0.16322),
     vec3(-0.0219198,0.0851447,0.0335728),
     vec3(0.0104004,-0.00894467,0.0400376),
     vec3(-0.00531921,0.00110069,0.00616288),
     vec3(0.0140045,-0.000617863,0.194186),
     vec3(0.0248658,0.178001,0.142326),
     vec3(-0.0221349,-0.0186879,0.0232489),
     vec3(-0.108036,-0.0595405,0.000396159),
     vec3(-0.0505698,0.0224265,0.0501235),
     vec3(-0.117398,-0.0671268,0.163161),
     vec3(-0.104875,0.0543914,0.057859),
     vec3(-0.000168996,-0.229999,0.191581),
     vec3(0.00910703,0.0460269,0.0281041),
     vec3(0.211396,-0.0399051,0.0310157),
     vec3(-0.281073,-0.0130238,0.263091),
     vec3(-0.19428,-0.155978,0.0829263),
     vec3(-0.255851,0.103669,0.213033),
     vec3(-0.0724531,-0.00677189,0.0559312),
     vec3(-0.0479846,0.0408676,0.0216966),
     vec3(0.419113,-0.0840001,0.0614351),
     vec3(-0.142124,-0.117721,0.0123825),
     vec3(-0.100215,-0.148081,0.15891),
     vec3(-0.175959,-0.0557777,0.472969),
     vec3(0.166189,-0.31206,0.372383),
     vec3(-0.148555,0.214538,0.140087),
     vec3(0.0558506,0.176665,0.210244),
     vec3(0.449903,0.132308,0.218952),
     vec3(0.206962,0.221446,0.540535),
     vec3(0.247703,-0.148567,0.189487),
     vec3(-0.48472,-0.105082,0.352459),
     vec3(-0.0621413,0.2381,0.450433),
     vec3(0.00817513,0.0056147,0.0100818),
     vec3(0.04268,0.00276263,0.0256127),
     vec3(0.289768,-0.0150121,0.453261),
     vec3(-0.323969,0.449255,0.466839),
     vec3(0.0853368,-0.700595,0.437232),
     vec3(-0.38395,-0.0728528,0.213074),
     vec3(0.607353,-0.0959567,0.372154),
     vec3(-0.0320814,-0.068635,0.118854),
     vec3(0.000619743,0.000552596,1.41305e-06),
     vec3(0.284828,0.236879,0.166289),
     vec3(0.552095,0.546249,0.310486),
     vec3(0.0447588,0.0704218,0.010128),
     vec3(0.190457,0.0934748,0.0771379),
     vec3(-0.669804,-0.17775,0.761161),
     vec3(-0.0811389,-0.170007,0.254942),
     vec3(0.199283,0.204321,0.15204),
     vec3(-0.605724,-0.967242,0.189837),
     vec3(-0.296396,0.370256,0.0790103),
     vec3(0.0369043,-0.118053,0.151321),
     vec3(0.113076,-0.0562746,0.0270676),
     vec3(-0.622468,0.298861,0.772022),
     vec3(0.358523,0.462106,0.611586),
     vec3(-0.413422,0.0915435,0.105792),
     vec3(0.256088,-0.490256,0.488618),
     vec3(0.280013,0.45701,0.856136),
     vec3(-0.823802,-0.780778,0.560032),
     vec3(0.305714,0.0554656,0.360591),
     vec3(-0.831954,0.06513,0.35446),
     vec3(0.0714316,-0.273157,0.511225),
     vec3(-0.251473,-0.124897,0.559321),
     vec3(-0.18113,-0.346112,0.15172),
     vec3(0.593618,0.609005,0.887981),
     vec3(0.654152,1.31784,0.682541),
     vec3(-0.657097,-0.145699,0.952182),
     vec3(-0.0517567,0.0556965,0.260057),
     vec3(0.459831,-0.422211,0.732208),
     vec3(0.660968,-0.973768,0.275247),
     vec3(0.194806,1.76431,0.56287),
     vec3(-0.411032,0.558244,0.563172),
     vec3(0.774309,-1.16699,0.196261),
     vec3(0.877804,-0.267623,1.23),
     vec3(1.41057,0.561549,0.401063),
     vec3(-0.08665,-0.130638,0.0653115),
     vec3(-0.832053,0.99599,0.966836),
     vec3(-0.126206,-0.979996,0.580451),
     vec3(-0.44166,0.0448876,0.198694),
     vec3(-0.501558,0.557017,1.44687),
     vec3(0.0724041,-0.411471,0.764031),
     vec3(0.173352,-0.176826,0.00435357),
     vec3(0.00945645,0.124467,0.0497827),
     vec3(-0.481242,-0.380773,0.405606),
     vec3(-1.16799,-0.0576868,0.594084),
     vec3(-0.300343,-1.96273,0.802467),
     vec3(0.423249,0.168263,0.736828),
     vec3(-0.00274449,0.0030196,0.00168193),
     vec3(0.762884,-1.00801,0.404314),
     vec3(0.266893,0.837259,1.19012),
     vec3(-0.318206,-0.258651,0.333462),
     vec3(-0.149816,0.114996,0.306124),
     vec3(0.262347,2.25327,0.885682),
     vec3(1.08809,-0.552901,0.288544),
     vec3(1.37414,1.74667,0.536813),
     vec3(1.6507,-0.407885,1.11661),
     vec3(-1.34569,-1.01932,0.199479),
     vec3(-1.01754,-0.667534,0.617378),
     vec3(-2.26681,1.01758,1.01888),
     vec3(-0.163182,0.205231,0.00642457),
     vec3(-0.00885693,0.414637,0.718689),
     vec3(-0.90133,1.72835,1.60545),
     vec3(0.0471973,0.0498776,0.103888),
     vec3(-1.27761,-1.31984,1.33392),
     vec3(0.46566,-0.513275,0.448849),
     vec3(0.167747,-0.366244,0.407881),
     vec3(-3.22903,1.15634,0.445939)
);
